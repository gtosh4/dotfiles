#! /bin/sh

# create a zkbd compatible hash;
# to add other keys to this hash, see: man 5 terminfo
typeset -A key

key[Home]=${terminfo[khome]}
key[End]=${terminfo[kend]}
key[Insert]=${terminfo[kich1]}
key[Delete]=${terminfo[kdch1]}
key[Up]=${terminfo[kcuu1]}
key[Down]=${terminfo[kcud1]}
key[Left]=${terminfo[kcub1]}
key[Right]=${terminfo[kcuf1]}
key[SLeft]=${terminfo[kLFT]}
key[SRight]=${terminfo[kRIT]}
key[PageUp]=${terminfo[kpp]}
key[PageDown]=${terminfo[knp]}

#for k in "${(@k)key}"; do
#    env echo "$k -> $key[$k]" | cat -v
#done

# setup key accordingly
[[ -n "${key[Home]}"     ]]  && bindkey  "${key[Home]}"    beginning-of-line
[[ -n "${key[End]}"      ]]  && bindkey  "${key[End]}"     end-of-line
[[ -n "${key[Insert]}"   ]]  && bindkey  "${key[Insert]}"  overwrite-mode
[[ -n "${key[Delete]}"   ]]  && bindkey  "${key[Delete]}"  delete-char
[[ -n "${key[Up]}"       ]]  && bindkey  "${key[Up]}"      up-line-or-history
[[ -n "${key[Down]}"     ]]  && bindkey  "${key[Down]}"    down-line-or-history
[[ -n "${key[Left]}"     ]]  && bindkey  "${key[Left]}"    backward-char
[[ -n "${key[Right]}"    ]]  && bindkey  "${key[Right]}"   forward-char
[[ -n "${key[SLeft]}"    ]]  && bindkey  "${key[SLeft]}"   emacs-backward-word
[[ -n "${key[SRight]}"   ]]  && bindkey  "${key[SRight]}"  emacs-forward-word

# explicit key binds
case $TERM in 
    *rxvt*) 
	bindkey '\eOd' emacs-backward-word
	bindkey '\eOc' emacs-forward-word
	;;
    screen*)
	bindkey '\e[D' emacs-backward-word
	bindkey '\e[C' emacs-forward-word
	;; 
    xterm*) 
	bindkey '\e[1;5D' emacs-backward-word
	bindkey '\e[1;5C' emacs-forward-word
	;; 
esac
bindkey -M emacs '^[[33~' backward-kill-word

bindkey '^ ' autosuggest-accept

# Finally, make sure the terminal is in application mode, when zle is
# active. Only then are the values from $terminfo valid.
function zle-line-init () {
    echoti smkx
}
function zle-line-finish () {
    echoti rmkx
}
zle -N zle-line-init
zle -N zle-line-finish
